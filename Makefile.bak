#================================================================
# Standard C Libraries
#
# For Solaris, use "alias make /usr/local/apstools/13.1_Solaris/lib/cse/make/make", other
# may report some Makefile errors

ifeq "$(OSTYPE)" "solaris"
# For MultiThreaded applications (INF01) libpthread -> POSIX threads, libthread -> SOLARIS threads
MTAPP_add=-lthread -lpthread -D_REENTRANT
else
# On Linux to check version of PTHREAD: getconf GNU_LIBPTHREAD_VERSION
MTAPP_add=-lpthread -D_REENTRANT
endif

#================================================================ 
# For RiscWatch:
# UAB: set RISCWATCH = "/opt/hde/RISCWatch/5.1/rwpi/rwpic.o"
RISCWATCH_add=/home4/etkcello/DDE/RiscWatch/5.1/rwpi/rwpic.o
#================================================================

#================================================================ 
# For terminal library on linux
TERM_add=-ltermcap
# in debian for temcap.h do: apt-get install ncurses-dev
#================================================================ 

#================================================================ 
# For sctp on linux Debian:::
# Copy sctp.h to /usr/include/netinet
# Preform: apt-get install lksctp* (it will install libsctp.so and lksctp-tools)
# library installed are
#     /usr/lib/libsctp.so.1
#     /usr/lib/libsctp.so.1.0.6
# however, i needed to copy one of these to /usr/lib/libsctp.so since -lsctp flag
# could not recognise these versioning
# For sctp on linux Suse:::
# installed in folder usr/lib64/libsctp.so.1
SCTP_add=-lsctp
#================================================================ 

ERO_VERSION = v12

BUILD_SRCS_COMMON= \
modules/axe/signalling.c \
modules/axe/mml/parser.c \
modules/axe/mml/parser.lex.yy.c \
modules/axe/mml/parser.y.tab.c \
modules/axe/mml/sections/sctp.c \
modules/axe/mml/sections/m3ua.c \
modules/axe/mml/sections/c7.c \
modules/axe/mml/sections/mobile.c \
modules/axe/tgen.c \
modules/axe/oscillo.c \
modules/axe/trace/trace.c \
modules/axe/trace/dataanalyse.c \
modules/axe/trace/configfile_parser.c \
modules/axe/trace/configfile_parser.lex.yy.c \
modules/axe/trace/configfile_parser.y.tab.c \
modules/axe/application/bss/bss_bsc.c \
modules/axe/application/ims/voip.c \
modules/axe/application/pstn/pstn.c \
modules/protocols/mobile/radio.c \
modules/protocols/mobile/sccp_bssap.c \
modules/protocols/mobile/sccp.c \
modules/protocols/ims/sip.c \
modules/protocols/trunk/isup.c \
modules/protocols/sigtran_m3ua.c \
modules/protocols/sigtran.c \
modules/protocols/ftp.c \
modules/system/cfsm.c \
modules/common.c \
modules/nethelper.c

ifeq "$(OSTYPE)" "solaris"
# for Solaris without vendor-supplied libraries (INF02)
#DIRS=-L/usr/openwin/lib -L/usr/lib -L/usr/dt/lib -L/usr/local/lib
#INCL=-I/usr/openwin/include
#LIBS=-lrpcsvc
BUILD_SRCS   = $(BUILD_SRCS_COMMON) \
modules/cpp/riscwatch.c \
modules/cpp/ultramapper.c
BUILD_FLAGS  = -lsocket -lnsl $(MTAPP_add) $(RISCWATCH_add) $(SCTP_add) -D _SOLARIS_ -D SPLIT
ERO_HOME      = /home3/etkfrbi/bin/design/REMOTEjob_$(ERO_VERSION)
else

# printenv VENDOR on suse is active when make is from tcsh
ifeq "$(VENDOR)" "suse"
ERO_HOME      = /HOME/BETEETK/etkfrbi/ero
BUILD_FLAGS  = -lc -L/usr/lib64 $(MTAPP_add) $(SCTP_add) -D _LINUX_ -D _SUSE_
BUILD_SRCS   = $(BUILD_SRCS_COMMON) \
modules/system/linux_sysinfo.c
else
ERO_HOME      = /home/frbi/workspace/ero
BUILD_FLAGS  = -L/usr/lib64 $(MTAPP_add) $(TERM_add) $(SCTP_add) -D _LINUX_
BUILD_SRCS   = $(BUILD_SRCS_COMMON) \
modules/system/linux_procstats.c \
modules/system/linux_sysinfo.c
endif

endif

BUILD_INCLUDES= \
-I$(ERO_HOME) \
-I$(ERO_HOME)/modules \
-I$(ERO_HOME)/modules/system \
-I$(ERO_HOME)/modules/axe \
-I$(ERO_HOME)/modules/axe/application/bss \
-I$(ERO_HOME)/modules/axe/application/pstn \
-I$(ERO_HOME)/modules/axe/mml \
-I$(ERO_HOME)/modules/axe/trace \
-I$(ERO_HOME)/modules/cpp \
-I$(ERO_HOME)/modules/protocols \
-I$(ERO_HOME)/modules/protocols/mobile \
-I$(ERO_HOME)/modules/protocols/trunk \
-I$(ERO_HOME)/modules/protocols/ims

CC=gcc
GET=co

# "remotejob" must be differnet than "ero", otherwise it will mixup order of building files
remotejob: ymml.tab.o lexmml.yy.o ytrace.tab.o lextrace.yy.o ero.o 
	
ymml.tab.o:modules/axe/mml/parser_y
	yacc -b ymml -p yymml -d modules/axe/mml/parser_y;
	mv ymml.tab.c modules/axe/mml/parser.y.tab.c
	mv ymml.tab.h modules/axe/mml/parser.y.tab.h
# yacc flag -v, it provides adddiotional file y.output with human readeable description of the parser 
# yacc flag -d, produces y.tab.h file (using it for yyinput)
lexmml.yy.o:modules/axe/mml/parser_l
	flex -Pyymml -t modules/axe/mml/parser_l>lexmml.yy.c;
	mv lexmml.yy.c modules/axe/mml/parser.lex.yy.c
	
ytrace.tab.o:modules/axe/trace/configfile_parser_y
	yacc -b ytrace -p yytrace -v -d modules/axe/trace/configfile_parser_y;
	mv ytrace.tab.c modules/axe/trace/configfile_parser.y.tab.c
	mv ytrace.tab.h modules/axe/trace/configfile_parser.y.tab.h
lextrace.yy.o:modules/axe/trace/configfile_parser_l
	flex -Pyytrace -t modules/axe/trace/configfile_parser_l>lextrace.yy.c;
	mv lextrace.yy.c modules/axe/trace/configfile_parser.lex.yy.c
	
# to build debug version ad -g after $(CC)
	
# To make an executable
ero.o: ero_$(ERO_VERSION).c
	$(CC) $< $(BUILD_SRCS) $(BUILD_FLAGS) $(BUILD_INCLUDES) -o ero 
	cp ero ./bin
	cp sigtran.conf* ./bin
	cp oscillo.conf* ./bin
	cp tgen.trigger ./bin
	cp tgen.conf* ./bin	
		
#================================================================ 
#Linux suportira deklaraciju varijabli usred koda, Solaris ne
#================================================================ 

	






	
